@startuml
actor User

box "Frontend" #LightBlue
participant "WebSPA" as AngularAPI
end box

box "Backend" #LightGreen
participant "Backend API" as API
participant "XRoute" as Route
participant "IXController" as IController
participant "XController" as Controller
participant "IXService" as IService
participant "XService" as Service
participant "IXRepo" as IRepo
participant "XRepo" as Repo
participant "XMap" as Map
participant "XDataSchema" as Schema
end box

User -> AngularAPI: Search X (param1, param2, ...)
activate AngularAPI

AngularAPI -> API: GET /api/X?param1=...&param2=...
activate API

API -> Route: GET /api/X?param1=...&param2=...
activate Route

Route -> IController: searchX(req, res, next)
activate IController

IController -> Controller: searchX(req, res, next)
deactivate IController
activate Controller

Controller -> IService: searchX(param1, param2)
activate IService

IService -> Service: searchX(param1, param2)
deactivate IService
activate Service

alt Code or designation provided
    Service -> IRepo: searchX(param1, param2)
    activate IRepo

    IRepo -> Repo: searchX(param1, param2)
    deactivate IRepo
    activate Repo

    Repo -> Schema: find({param1, param2})
    activate Schema

    Schema --> Repo: List<X>
    deactivate Schema
    Repo -> Map: toDomainList(List<X>)
    activate Map

    Map --> Repo: List<X (domain)]
    deactivate Map

    Repo --> Service: List<X (domain)>
    deactivate Repo

else No code or designation
    Service -> IRepo: getAllX()
    activate IRepo

    IRepo -> Repo: getAllX()
    deactivate IRepo
    activate Repo

    Repo -> Schema: findAll()
    activate Schema

    Schema --> Repo: List<X>
    deactivate Schema
    Repo -> Map: toDomainList(List<X>)
    activate Map

    Map --> Repo: List<X (domain)]
    deactivate Map
    Repo --> Service: List<X (domain)>
    deactivate Repo
end

alt No X found
    Service --> Controller: Result.fail("X not found")
    Controller --> Route: 400 Bad Request\n"X not found"
    Route --> API: 400 Bad Request\n"X not found"
    API --> AngularAPI: 400 Bad Request\n"X not found"
    AngularAPI --> User: Show error message "X not found"
else X found
    Service -> Map: toDTOList(List<X>)
    activate Map

    Map --> Service: List<XDTO>
    deactivate Map
    Service --> Controller: Result.ok(List<XDTO>)
    Controller --> Route: 200 OK\n(List<XDTO>)
    Route --> API: 200 OK\n(List<XDTO>)
    API --> AngularAPI: 200 OK\n(List<XDTO>)
    AngularAPI --> User: Show list of X
end

deactivate Service
deactivate Controller
deactivate Route
deactivate API
deactivate AngularAPI

@enduml
